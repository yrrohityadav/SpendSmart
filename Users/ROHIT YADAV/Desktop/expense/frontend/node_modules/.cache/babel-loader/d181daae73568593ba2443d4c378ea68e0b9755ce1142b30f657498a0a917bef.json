{"ast":null,"code":"\n\n//   frontend/src/App.js\n// import React, { useState, useEffect } from 'react';\n// import Dashboard from './components/Dashboard';\n// import AddExpense from './components/AddExpense';\n// import Login from './components/Login';\n// import { auth } from './firebase';\n// import './App.css';\n\n// function App() {\n//   const [expenses, setExpenses] = useState([]);\n//   const [isLoggedIn, setIsLoggedIn] = useState(false);\n//   const [showAddExpense, setShowAddExpense] = useState(false);\n//   const [editingExpense, setEditingExpense] = useState(null);\n\n//   useEffect(() => {\n//     if (isLoggedIn) {\n//       fetchExpenses();\n//     }\n//   }, [isLoggedIn]);\n\n//   const fetchExpenses = async () => {\n//     try {\n//       const user = auth.currentUser;\n//       const token = await user.getIdToken();\n\n//       const response = await fetch('http://localhost:5000/api/expenses', {\n//         headers: {\n//           Authorization: `Bearer ${token}`,\n//         },\n//       });\n\n//       const data = await response.json();\n//       if (!Array.isArray(data)) {\n//         console.error('Unexpected response from API:', data);\n//         return;\n//       }\n\n//       setExpenses(data);\n//     } catch (error) {\n//       console.error('Error fetching expenses:', error);\n//     }\n//   };\n\n//   const handleDelete = async (id) => {\n//     try {\n//       const user = auth.currentUser;\n//       const token = await user.getIdToken();\n\n//       await fetch(`http://localhost:5000/api/expenses/${id}`, {\n//         method: 'DELETE',\n//         headers: {\n//           Authorization: `Bearer ${token}`,\n//         },\n//       });\n\n//       fetchExpenses();\n//     } catch (error) {\n//       console.error('Error deleting expense:', error);\n//     }\n//   };\n\n//   const handleSubmit = async (expenseData) => {\n//     try {\n//       const user = auth.currentUser;\n//       const token = await user.getIdToken();\n\n//       const url = editingExpense\n//         ? `http://localhost:5000/api/expenses/${editingExpense._id}`\n//         : 'http://localhost:5000/api/expenses';\n\n//       const method = editingExpense ? 'PUT' : 'POST';\n\n//       await fetch(url, {\n//         method,\n//         headers: {\n//           'Content-Type': 'application/json',\n//           Authorization: `Bearer ${token}`,\n//         },\n//         body: JSON.stringify(expenseData),\n//       });\n\n//       fetchExpenses();\n//       setShowAddExpense(false);\n//       setEditingExpense(null);\n//     } catch (error) {\n//       console.error('Error submitting expense:', error);\n//     }\n//   };\n\n//   if (!isLoggedIn) {\n//     return <Login onLoginSuccess={() => setIsLoggedIn(true)} />;\n//   }\n\n//   return (\n//     <div className=\"App\">\n//       <Dashboard\n//         expenses={expenses}\n//         onAddExpense={() => {\n//           setEditingExpense(null);\n//           setShowAddExpense(true);\n//         }}\n//         onEditExpense={(expense) => {\n//           setEditingExpense(expense);\n//           setShowAddExpense(true);\n//         }}\n//         onDeleteExpense={handleDelete}\n//       />\n//       {showAddExpense && (\n//         <AddExpense\n//           expense={editingExpense}\n//           onSubmit={handleSubmit}\n//           onClose={() => {\n//             setShowAddExpense(false);\n//             setEditingExpense(null);\n//           }}\n//         />\n//       )}\n//     </div>\n//   );\n// }\n\n// export default App;","map":{"version":3,"names":[],"sources":["C:/Users/ROHIT YADAV/Desktop/ExpeseTracker/SpendSmart/Users/ROHIT YADAV/Desktop/expense/frontend/src/App.js"],"sourcesContent":["\r\n\r\n\r\n\r\n//   frontend/src/App.js\r\n// import React, { useState, useEffect } from 'react';\r\n// import Dashboard from './components/Dashboard';\r\n// import AddExpense from './components/AddExpense';\r\n// import Login from './components/Login';\r\n// import { auth } from './firebase';\r\n// import './App.css';\r\n\r\n// function App() {\r\n//   const [expenses, setExpenses] = useState([]);\r\n//   const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n//   const [showAddExpense, setShowAddExpense] = useState(false);\r\n//   const [editingExpense, setEditingExpense] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     if (isLoggedIn) {\r\n//       fetchExpenses();\r\n//     }\r\n//   }, [isLoggedIn]);\r\n\r\n//   const fetchExpenses = async () => {\r\n//     try {\r\n//       const user = auth.currentUser;\r\n//       const token = await user.getIdToken();\r\n\r\n//       const response = await fetch('http://localhost:5000/api/expenses', {\r\n//         headers: {\r\n//           Authorization: `Bearer ${token}`,\r\n//         },\r\n//       });\r\n\r\n//       const data = await response.json();\r\n//       if (!Array.isArray(data)) {\r\n//         console.error('Unexpected response from API:', data);\r\n//         return;\r\n//       }\r\n\r\n//       setExpenses(data);\r\n//     } catch (error) {\r\n//       console.error('Error fetching expenses:', error);\r\n//     }\r\n//   };\r\n\r\n//   const handleDelete = async (id) => {\r\n//     try {\r\n//       const user = auth.currentUser;\r\n//       const token = await user.getIdToken();\r\n\r\n//       await fetch(`http://localhost:5000/api/expenses/${id}`, {\r\n//         method: 'DELETE',\r\n//         headers: {\r\n//           Authorization: `Bearer ${token}`,\r\n//         },\r\n//       });\r\n\r\n//       fetchExpenses();\r\n//     } catch (error) {\r\n//       console.error('Error deleting expense:', error);\r\n//     }\r\n//   };\r\n\r\n//   const handleSubmit = async (expenseData) => {\r\n//     try {\r\n//       const user = auth.currentUser;\r\n//       const token = await user.getIdToken();\r\n\r\n//       const url = editingExpense\r\n//         ? `http://localhost:5000/api/expenses/${editingExpense._id}`\r\n//         : 'http://localhost:5000/api/expenses';\r\n\r\n//       const method = editingExpense ? 'PUT' : 'POST';\r\n\r\n//       await fetch(url, {\r\n//         method,\r\n//         headers: {\r\n//           'Content-Type': 'application/json',\r\n//           Authorization: `Bearer ${token}`,\r\n//         },\r\n//         body: JSON.stringify(expenseData),\r\n//       });\r\n\r\n//       fetchExpenses();\r\n//       setShowAddExpense(false);\r\n//       setEditingExpense(null);\r\n//     } catch (error) {\r\n//       console.error('Error submitting expense:', error);\r\n//     }\r\n//   };\r\n\r\n//   if (!isLoggedIn) {\r\n//     return <Login onLoginSuccess={() => setIsLoggedIn(true)} />;\r\n//   }\r\n\r\n//   return (\r\n//     <div className=\"App\">\r\n//       <Dashboard\r\n//         expenses={expenses}\r\n//         onAddExpense={() => {\r\n//           setEditingExpense(null);\r\n//           setShowAddExpense(true);\r\n//         }}\r\n//         onEditExpense={(expense) => {\r\n//           setEditingExpense(expense);\r\n//           setShowAddExpense(true);\r\n//         }}\r\n//         onDeleteExpense={handleDelete}\r\n//       />\r\n//       {showAddExpense && (\r\n//         <AddExpense\r\n//           expense={editingExpense}\r\n//           onSubmit={handleSubmit}\r\n//           onClose={() => {\r\n//             setShowAddExpense(false);\r\n//             setEditingExpense(null);\r\n//           }}\r\n//         />\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default App;\r\n"],"mappings":";;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
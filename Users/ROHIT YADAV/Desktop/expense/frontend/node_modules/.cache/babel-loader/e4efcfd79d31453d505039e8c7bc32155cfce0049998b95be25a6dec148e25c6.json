{"ast":null,"code":"// import React from 'react';\n// import {\n//   Chart as ChartJS,\n//   CategoryScale,\n//   LinearScale,\n//   BarElement,\n//   ArcElement,\n//   Title,\n//   Tooltip,\n//   Legend,\n// } from 'chart.js';\n// import { Bar, Pie } from 'react-chartjs-2';\n\n// ChartJS.register(\n//   CategoryScale,\n//   LinearScale,\n//   BarElement,\n//   ArcElement,\n//   Title,\n//   Tooltip,\n//   Legend\n// );\n\n// const Charts = ({ expenses }) => {\n//   // Weekly spending data\n//   const getWeeklyData = () => {\n//     const weekdays = ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'];\n//     const weeklySpending = new Array(7).fill(0);\n\n//     const today = new Date();\n//     const currentWeekStart = new Date(today.setDate(today.getDate() - today.getDay() + 1));\n\n//     expenses.forEach(expense => {\n//       const expenseDate = new Date(expense.date);\n//       const diffTime = expenseDate.getTime() - currentWeekStart.getTime();\n//       const diffDays = Math.floor(diffTime / (1000 * 60 * 60 * 24));\n\n//       if (diffDays >= 0 && diffDays < 7) {\n//         weeklySpending[diffDays] += expense.amount;\n//       }\n//     });\n\n//     return {\n//       labels: weekdays,\n//       datasets: [\n//         {\n//           data: weeklySpending,\n//           backgroundColor: 'rgba(54, 162, 235, 0.8)',\n//           borderColor: 'rgba(54, 162, 235, 1)',\n//           borderWidth: 1,\n//         },\n//       ],\n//     };\n//   };\n\n//   // Category spending data\n//   const getCategoryData = () => {\n//     const categoryTotals = {};\n\n//     expenses.forEach(expense => {\n//       categoryTotals[expense.category] = (categoryTotals[expense.category] || 0) + expense.amount;\n//     });\n\n//     const colors = [\n//       '#FF6384',\n//       '#36A2EB',\n//       '#FFCE56',\n//       '#4BC0C0',\n//       '#9966FF',\n//       '#FF9F40'\n//     ];\n\n//     return {\n//       labels: Object.keys(categoryTotals),\n//       datasets: [\n//         {\n//           data: Object.values(categoryTotals),\n//           backgroundColor: colors,\n//           borderWidth: 2,\n//         },\n//       ],\n//     };\n//   };\n\n//   const chartOptions = {\n//     responsive: true,\n//     maintainAspectRatio: false,\n//     plugins: {\n//       legend: {\n//         display: false,\n//       },\n//     },\n//     scales: {\n//       y: {\n//         beginAtZero: true,\n//         grid: {\n//           color: '#f0f0f0',\n//         },\n//       },\n//       x: {\n//         grid: {\n//           display: false,\n//         },\n//       },\n//     },\n//   };\n\n//   const pieOptions = {\n//     responsive: true,\n//     maintainAspectRatio: false,\n//     plugins: {\n//       legend: {\n//         position: 'right',\n//       },\n//     },\n//   };\n\n//   return (\n//     <div className=\"charts-container\">\n//       <div className=\"chart-section\">\n//         <h3>Weekly Spending Trend</h3>\n//         <div className=\"chart-wrapper\">\n//           <Bar data={getWeeklyData()} options={chartOptions} />\n//         </div>\n//       </div>\n\n//       <div className=\"chart-section\">\n//         <h3>Spending by Category</h3>\n//         <div className=\"chart-wrapper\">\n//           <Pie data={getCategoryData()} options={pieOptions} />\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Charts;","map":{"version":3,"names":[],"sources":["C:/Users/ROHIT YADAV/Desktop/ExpeseTracker/SpendSmart/Users/ROHIT YADAV/Desktop/expense/frontend/src/components/Charts.js"],"sourcesContent":["// import React from 'react';\r\n// import {\r\n//   Chart as ChartJS,\r\n//   CategoryScale,\r\n//   LinearScale,\r\n//   BarElement,\r\n//   ArcElement,\r\n//   Title,\r\n//   Tooltip,\r\n//   Legend,\r\n// } from 'chart.js';\r\n// import { Bar, Pie } from 'react-chartjs-2';\r\n\r\n// ChartJS.register(\r\n//   CategoryScale,\r\n//   LinearScale,\r\n//   BarElement,\r\n//   ArcElement,\r\n//   Title,\r\n//   Tooltip,\r\n//   Legend\r\n// );\r\n\r\n// const Charts = ({ expenses }) => {\r\n//   // Weekly spending data\r\n//   const getWeeklyData = () => {\r\n//     const weekdays = ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'];\r\n//     const weeklySpending = new Array(7).fill(0);\r\n    \r\n//     const today = new Date();\r\n//     const currentWeekStart = new Date(today.setDate(today.getDate() - today.getDay() + 1));\r\n    \r\n//     expenses.forEach(expense => {\r\n//       const expenseDate = new Date(expense.date);\r\n//       const diffTime = expenseDate.getTime() - currentWeekStart.getTime();\r\n//       const diffDays = Math.floor(diffTime / (1000 * 60 * 60 * 24));\r\n      \r\n//       if (diffDays >= 0 && diffDays < 7) {\r\n//         weeklySpending[diffDays] += expense.amount;\r\n//       }\r\n//     });\r\n\r\n//     return {\r\n//       labels: weekdays,\r\n//       datasets: [\r\n//         {\r\n//           data: weeklySpending,\r\n//           backgroundColor: 'rgba(54, 162, 235, 0.8)',\r\n//           borderColor: 'rgba(54, 162, 235, 1)',\r\n//           borderWidth: 1,\r\n//         },\r\n//       ],\r\n//     };\r\n//   };\r\n\r\n//   // Category spending data\r\n//   const getCategoryData = () => {\r\n//     const categoryTotals = {};\r\n    \r\n//     expenses.forEach(expense => {\r\n//       categoryTotals[expense.category] = (categoryTotals[expense.category] || 0) + expense.amount;\r\n//     });\r\n\r\n//     const colors = [\r\n//       '#FF6384',\r\n//       '#36A2EB',\r\n//       '#FFCE56',\r\n//       '#4BC0C0',\r\n//       '#9966FF',\r\n//       '#FF9F40'\r\n//     ];\r\n\r\n//     return {\r\n//       labels: Object.keys(categoryTotals),\r\n//       datasets: [\r\n//         {\r\n//           data: Object.values(categoryTotals),\r\n//           backgroundColor: colors,\r\n//           borderWidth: 2,\r\n//         },\r\n//       ],\r\n//     };\r\n//   };\r\n\r\n//   const chartOptions = {\r\n//     responsive: true,\r\n//     maintainAspectRatio: false,\r\n//     plugins: {\r\n//       legend: {\r\n//         display: false,\r\n//       },\r\n//     },\r\n//     scales: {\r\n//       y: {\r\n//         beginAtZero: true,\r\n//         grid: {\r\n//           color: '#f0f0f0',\r\n//         },\r\n//       },\r\n//       x: {\r\n//         grid: {\r\n//           display: false,\r\n//         },\r\n//       },\r\n//     },\r\n//   };\r\n\r\n//   const pieOptions = {\r\n//     responsive: true,\r\n//     maintainAspectRatio: false,\r\n//     plugins: {\r\n//       legend: {\r\n//         position: 'right',\r\n//       },\r\n//     },\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"charts-container\">\r\n//       <div className=\"chart-section\">\r\n//         <h3>Weekly Spending Trend</h3>\r\n//         <div className=\"chart-wrapper\">\r\n//           <Bar data={getWeeklyData()} options={chartOptions} />\r\n//         </div>\r\n//       </div>\r\n      \r\n//       <div className=\"chart-section\">\r\n//         <h3>Spending by Category</h3>\r\n//         <div className=\"chart-wrapper\">\r\n//           <Pie data={getCategoryData()} options={pieOptions} />\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Charts;"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}